<?php

/**
 * Copyright Â© OXID eSales AG. All rights reserved.
 * See LICENSE file for license details.
 */

declare(strict_types=1);

namespace OxidSolutionCatalysts\Adyen\Tests\Integration\Controller\Admin;

use OxidEsales\Eshop\Application\Model\Order;
use OxidEsales\TestingLibrary\UnitTestCase;
use OxidSolutionCatalysts\Adyen\Controller\Admin\AdminOrderController;

/*
 * Here we have tests for a what we call 'chain extended' shop class.
 * Current module might not be the only one extending the same class/method.
 * Always use the unified namespace name of the class instantiated with oxNew()
 * when testing.
 */
final class AdminOrderControllerTest extends UnitTestCase
{
    public function setup(): void
    {
        parent::setUp();
        $order = oxNew(Order::class);
        $order->setId('123');
        $order->save();
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        $order = oxNew(Order::class);
        $order->load('123');
        $order->delete();
    }

    public function testControllerRender(): void
    {
        $controller = $this->createPartialMock(AdminOrderController::class, ['getEditObjectId']);
        $controller->expects($this->any())->method('getEditObjectId')->willReturn('123');

        $this->assertSame('osc_adyen_order.tpl', $controller->render());

        $viewData = $controller->getViewData();
        $this->assertSame('123', $viewData['oxid']);
        $this->assertInstanceOf(Order::class, $viewData['edit']);
        $this->assertSame('123', $viewData['edit']->getId());
    }
}
